package com.perscholas.poonamkajal.physicianadvisor.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.perscholas.poonamkajal.physicianadvisor.implementation.PatientServiceImpl;
import com.perscholas.poonamkajal.physicianadvisor.models.Patient;
import com.perscholas.poonamkajal.physicianadvisor.services.PatientService;

@RestController
@RequestMapping("/api")

public class PatientController {
	@Autowired
	private PatientServiceImpl patientService;
	
	@GetMapping("/patient/{id}")
	public Optional<Patient> getPatientById(@PathVariable("id") long id) {
	    
	       return  patientService.getPatientById(id);
	   }
	@PostMapping("/patient")
	   public void createTutorial(@RequestBody Patient patient) {
	       patientService.addPatient(patient);
	   }

	@PutMapping("/patient/{id}")
	   public void updatePatient(@PathVariable("id") long id, @RequestBody Patient patient) {
	       Optional<Patient> patientData = patientService.getPatientById(id);

	       if (patientData.isPresent()) {
	           Patient _patient = patientData.get();
	           _patient.setFirstName(patient.getFirstName());
				_patient.setLastName(patient.getLastName());
				_patient.setDob(patient.getDob());
	           patientService.addPatient(_patient);
	       }
	   }
	 @DeleteMapping("/patient/{id}")
	   public void deletePatient(@PathVariable("id") long id) {
	       patientService.deletePatient(id);
	   }
	 @DeleteMapping("/patient")
	   public void deleteAllTutorials() {

	       patientService.deleteAllPatient();
	   }
	 @GetMapping("/patient/id")
	   public ResponseEntity<Optional<Patient>> findById() {
	       return patientService.findById();   } 




}
